-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module SAI.Enum.Month exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-|

  - January -
  - February -
  - March -
  - April -
  - May -
  - June -
  - July -
  - August -
  - September -
  - October -
  - November -
  - December -

-}
type Month
    = January
    | February
    | March
    | April
    | May
    | June
    | July
    | August
    | September
    | October
    | November
    | December


list : List Month
list =
    [ January, February, March, April, May, June, July, August, September, October, November, December ]


decoder : Decoder Month
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "JANUARY" ->
                        Decode.succeed January

                    "FEBRUARY" ->
                        Decode.succeed February

                    "MARCH" ->
                        Decode.succeed March

                    "APRIL" ->
                        Decode.succeed April

                    "MAY" ->
                        Decode.succeed May

                    "JUNE" ->
                        Decode.succeed June

                    "JULY" ->
                        Decode.succeed July

                    "AUGUST" ->
                        Decode.succeed August

                    "SEPTEMBER" ->
                        Decode.succeed September

                    "OCTOBER" ->
                        Decode.succeed October

                    "NOVEMBER" ->
                        Decode.succeed November

                    "DECEMBER" ->
                        Decode.succeed December

                    _ ->
                        Decode.fail ("Invalid Month type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Month -> String
toString enum =
    case enum of
        January ->
            "JANUARY"

        February ->
            "FEBRUARY"

        March ->
            "MARCH"

        April ->
            "APRIL"

        May ->
            "MAY"

        June ->
            "JUNE"

        July ->
            "JULY"

        August ->
            "AUGUST"

        September ->
            "SEPTEMBER"

        October ->
            "OCTOBER"

        November ->
            "NOVEMBER"

        December ->
            "DECEMBER"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Month
fromString enumString =
    case enumString of
        "JANUARY" ->
            Just January

        "FEBRUARY" ->
            Just February

        "MARCH" ->
            Just March

        "APRIL" ->
            Just April

        "MAY" ->
            Just May

        "JUNE" ->
            Just June

        "JULY" ->
            Just July

        "AUGUST" ->
            Just August

        "SEPTEMBER" ->
            Just September

        "OCTOBER" ->
            Just October

        "NOVEMBER" ->
            Just November

        "DECEMBER" ->
            Just December

        _ ->
            Nothing
