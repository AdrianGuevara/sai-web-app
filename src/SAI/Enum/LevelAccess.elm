-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module SAI.Enum.LevelAccess exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-|

  - Member -
  - Capturist -
  - Leader -
  - Adm -
  - Root -

-}
type LevelAccess
    = Member
    | Capturist
    | Leader
    | Adm
    | Root


list : List LevelAccess
list =
    [ Member, Capturist, Leader, Adm, Root ]


decoder : Decoder LevelAccess
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "MEMBER" ->
                        Decode.succeed Member

                    "CAPTURIST" ->
                        Decode.succeed Capturist

                    "LEADER" ->
                        Decode.succeed Leader

                    "ADM" ->
                        Decode.succeed Adm

                    "ROOT" ->
                        Decode.succeed Root

                    _ ->
                        Decode.fail ("Invalid LevelAccess type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : LevelAccess -> String
toString enum =
    case enum of
        Member ->
            "MEMBER"

        Capturist ->
            "CAPTURIST"

        Leader ->
            "LEADER"

        Adm ->
            "ADM"

        Root ->
            "ROOT"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe LevelAccess
fromString enumString =
    case enumString of
        "MEMBER" ->
            Just Member

        "CAPTURIST" ->
            Just Capturist

        "LEADER" ->
            Just Leader

        "ADM" ->
            Just Adm

        "ROOT" ->
            Just Root

        _ ->
            Nothing
