-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module SAI.Enum.CommitmentLevel exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-|

  - Community -
  - Crowd -
  - Congregation -
  - Committed -
  - Core -
  - Commissioned -

-}
type CommitmentLevel
    = Community
    | Crowd
    | Congregation
    | Committed
    | Core
    | Commissioned


list : List CommitmentLevel
list =
    [ Community, Crowd, Congregation, Committed, Core, Commissioned ]


decoder : Decoder CommitmentLevel
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "COMMUNITY" ->
                        Decode.succeed Community

                    "CROWD" ->
                        Decode.succeed Crowd

                    "CONGREGATION" ->
                        Decode.succeed Congregation

                    "COMMITTED" ->
                        Decode.succeed Committed

                    "CORE" ->
                        Decode.succeed Core

                    "COMMISSIONED" ->
                        Decode.succeed Commissioned

                    _ ->
                        Decode.fail ("Invalid CommitmentLevel type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : CommitmentLevel -> String
toString enum =
    case enum of
        Community ->
            "COMMUNITY"

        Crowd ->
            "CROWD"

        Congregation ->
            "CONGREGATION"

        Committed ->
            "COMMITTED"

        Core ->
            "CORE"

        Commissioned ->
            "COMMISSIONED"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe CommitmentLevel
fromString enumString =
    case enumString of
        "COMMUNITY" ->
            Just Community

        "CROWD" ->
            Just Crowd

        "CONGREGATION" ->
            Just Congregation

        "COMMITTED" ->
            Just Committed

        "CORE" ->
            Just Core

        "COMMISSIONED" ->
            Just Commissioned

        _ ->
            Nothing
