-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module SAI.Enum.Progress exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-|

  - NotReached -
  - Reached -
  - Affirmed -
  - Involved -
  - Strengthened -
  - Commissioned -

-}
type Progress
    = NotReached
    | Reached
    | Affirmed
    | Involved
    | Strengthened
    | Commissioned


list : List Progress
list =
    [ NotReached, Reached, Affirmed, Involved, Strengthened, Commissioned ]


decoder : Decoder Progress
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "NOT_REACHED" ->
                        Decode.succeed NotReached

                    "REACHED" ->
                        Decode.succeed Reached

                    "AFFIRMED" ->
                        Decode.succeed Affirmed

                    "INVOLVED" ->
                        Decode.succeed Involved

                    "STRENGTHENED" ->
                        Decode.succeed Strengthened

                    "COMMISSIONED" ->
                        Decode.succeed Commissioned

                    _ ->
                        Decode.fail ("Invalid Progress type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Progress -> String
toString enum =
    case enum of
        NotReached ->
            "NOT_REACHED"

        Reached ->
            "REACHED"

        Affirmed ->
            "AFFIRMED"

        Involved ->
            "INVOLVED"

        Strengthened ->
            "STRENGTHENED"

        Commissioned ->
            "COMMISSIONED"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Progress
fromString enumString =
    case enumString of
        "NOT_REACHED" ->
            Just NotReached

        "REACHED" ->
            Just Reached

        "AFFIRMED" ->
            Just Affirmed

        "INVOLVED" ->
            Just Involved

        "STRENGTHENED" ->
            Just Strengthened

        "COMMISSIONED" ->
            Just Commissioned

        _ ->
            Nothing
